name: CI
on:
  pull_request:
    branches:
      - stable
      - beta
      - alpha
  push:
    branches:
      - stable
      - beta
      - alpha
env:
  GOLANG_VERSION: 1.23.*
  CGO_ENABLED: "0"
  GOPRIVATE: "github.com/secure-passage"
permissions:
  contents: read
  checks: write
jobs:
  golint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GOLANG_VERSION }}
          cache: false
      - run: git config --global url.https://${{ secrets.PERSONAL_TOKEN }}@github.com.insteadOf https://github.com
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          # Require: The version of golangci-lint to use.
          # When `install-mode` is `binary` (default) the value can be v1.2 or v1.2.3 or `latest` to use the latest version.
          # When `install-mode` is `goinstall` the value can be v1.2.3, `latest`, or the hash of a commit.
          version: v1.61
          # Optional: working directory, useful for monorepos
          # working-directory: somedir

          # Optional: golangci-lint command line arguments.
          #
          # Note: By default, the `.golangci.yml` file should be at the root of the repository.
          # The location of the configuration file can be changed by using `--config=`
          # args: --timeout=30m --config=/my/path/.golangci.yml --issues-exit-code=0

          # Optional: show only new issues if it's a pull request. The default value is `false`.
          # only-new-issues: true

          # Optional: if set to true, then all caching functionality will be completely disabled,
          # takes precedence over all other caching options.
          # skip-cache: true

          # Optional: if set to true, then the action won't cache or restore ~/go/pkg.
          # skip-pkg-cache: true

          # Optional: if set to true, then the action won't cache or restore ~/.cache/go-build.
          # skip-build-cache: true

          # Optional: The mode to install golangci-lint. It can be 'binary' or 'goinstall'.
          # install-mode: "goinstall"
  buflint:
    name: Lint Proto
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: bufbuild/buf-setup-action@v1
      - uses: bufbuild/buf-lint-action@v1
      - uses: bufbuild/buf-breaking-action@v1
        if: ${{ github.event_name == 'pull_request' }}
        with:
          against: https://github.com/secure-passage/dragon.git#branch=${{ github.base_ref }}
  gotest:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GOLANG_VERSION }}
          cache: false
      - run: git config --global url.https://${{ secrets.PERSONAL_TOKEN }}@github.com.insteadOf https://github.com
      - name: Go Test
        run: go test -v ./...
  dockerbuild:
    name: Build Artifacts
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GOLANG_VERSION }}
          cache: false
      - run: git config --global url.https://${{ secrets.PERSONAL_TOKEN }}@github.com.insteadOf https://github.com
      - uses: goreleaser/goreleaser-action@v6
        with:
          version: latest
          args: build --snapshot --single-target
        env:
          REGISTRY: us-docker.pkg.dev
